{"version":3,"file":"TextInput.ff1a1419.js","sources":["../../node_modules/phosphor-react/dist/icons/Envelope.esm.js","../../src/components/TextInput.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56a0,0,0,0,1,0,0Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polygon\", {\n    points: \"224 56 128 144 32 56 224 56\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM98.7,128,40,181.8V74.2Zm11.8,10.9,12.1,11a8,8,0,0,0,10.8,0l12.1-11L203.4,192H52.6ZM157.3,128,216,74.2V181.8Z\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"224 56 128 144 32 56\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"path\", {\n    d: \"M32,56H224a0,0,0,0,1,0,0V192a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56A0,0,0,0,1,32,56Z\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"110.5\",\n    y1: \"128\",\n    x2: \"34.5\",\n    y2: \"197.7\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"line\", {\n    x1: \"221.5\",\n    y1: \"197.7\",\n    x2: \"145.5\",\n    y2: \"128\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar Envelope = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nEnvelope.displayName = \"Envelope\";\n\nexport default Envelope;\n//# sourceMappingURL=Envelope.esm.js.map\n","import { InputHTMLAttributes, ReactNode } from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\n\nexport interface TextInputRootProps {\n  children: ReactNode;\n}\n\nfunction TextInputRoot(props: TextInputRootProps) {\n  return (\n    <div className=\"flex items-center gap-3 h-12 py-3 px-4 rounded bg-gray-800 w-full focus-within:ring-2 ring-blue-300\">\n      {props.children}\n    </div>\n  );\n}\n\nTextInputRoot.displayName = \"TextInput.Root\";\n\nexport interface TextInputIconProps {\n  children: ReactNode;\n}\n\nfunction TextInputIcon(props: TextInputIconProps) {\n  return <Slot className=\"w-6 h-6 text-gray-400\">{props.children}</Slot>;\n}\n\nTextInputIcon.displayName = \"TextInput.Icon\";\n\nexport interface TextInputInputProps\n  extends InputHTMLAttributes<HTMLInputElement> {}\n\nfunction TextInputInput(props: TextInputInputProps) {\n  return (\n    <input\n      className=\"bg-transparent flex-1 text-gray-100 text-xs placeholder:text-gray-400 outline-none\"\n      {...props}\n    />\n  );\n}\n\nTextInputInput.displayName = \"TextInput.Input\";\n\nexport const TextInput = {\n  Root: TextInputRoot,\n  Input: TextInputInput,\n  Icon: TextInputIcon,\n};\n"],"names":["pathsByWeight","Map","set","color","_jsxs","_Fragment","_jsx","renderPath","__name","weight","renderPathForWeight","Envelope","forwardRef","props","ref","Object","assign","displayName","Envelope$1","TextInputRoot","children","TextInputIcon","Slot","TextInputInput","TextInput","Root","Input","Icon"],"mappings":"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"}